import java.io.*;
import java.util.*;

class Employee {
    int id;
    String fname;
    String lname;
    String sex;
    int age;
    String academic_level;
    String Department;
    long phone;
    double salary;

    public Employee(int id, String fname, String lname ,String sex, int age,String academic_level,String Department ,long phone, double salary ) {
        this.id = id;
        this.fname = fname;
        this.lname=lname;
        this.sex = sex;
        this.age = age;
        this.academic_level=academic_level;
        this.Department=Department;
        this.phone = phone;
        this.salary = salary;
    }
}

class EmployeeManagement {
    ArrayList<Employee> employees = new ArrayList<>();
    Scanner scan_integer = new Scanner(System.in);
    Scanner scan_string = new Scanner(System.in);

    void writeEmployeeToFile() {
        try {
            FileWriter fw = new FileWriter("employee.txt", true);
            BufferedWriter bw = new BufferedWriter(fw);  // file is opened in order to add new employees information

            System.out.print("Enter employee id : ");
            int id = scan_integer.nextInt();
            id = checkID(id);
            System.out.print("Enter the first name of the employee : ");
            String fname = scan_string.nextLine();
            System.out.print("Enter the last name of the employee : ");
            String lname = scan_string.nextLine();
            System.out.print("Enter the sex employee (male/female): ");
            String sex = scan_string.nextLine();
            while (!(sex.equalsIgnoreCase("male") || sex.equalsIgnoreCase("female"))) {
                System.out.println("Please enter male or female for the sex!");
                sex = scan_string.nextLine();
            }
            System.out.print("Enter employee age: ");
            int age = scan_integer.nextInt();
            while (age <= 18) {
                System.out.println("It is restricted by law no hire children.employee's age  must be greater than 18. Please enter a valid age: ");
                age = scan_integer.nextInt();
            }
            System.out.print("Enter Academic level of the employee ");
            String academic_level = scan_string.nextLine();
            System.out.print("Enter the department of the employee ");
            String Department = scan_string.nextLine();
            System.out.print("Enter employee phone: ");
            long phone = scan_integer.nextLong();
            while (String.valueOf(phone).length() != 10) {
                System.out.println("Phone number should be 10 digits!");
                phone = scan_integer.nextLong();
            }
            System.out.print("Enter employee salary: ");
            double salary = scan_integer.nextDouble();

            Employee emp = new Employee(id, fname, lname, sex, age, academic_level, Department, phone, salary);
            employees.add(emp);

            StringBuilder sb = new StringBuilder();
            sb.append("* Id : ").append(emp.id)
                    .append("\n* First Name: ").append(emp.fname)
                    .append("\n* Last Name: ").append(emp.lname)
                    .append("\n* Sex : ").append(emp.sex)
                    .append("\n* Age : ").append(emp.age)
                    .append("\n* academic_level: ").append(emp.academic_level)
                    .append("\n* Department: ").append(emp.Department)
                    .append("\n* Phone : ").append(emp.phone)
                    .append("\n* Salary : ").append(emp.salary)
                    .append("\n@vvvvvvvvvvvvvvvvvvvvvvvvvv@\n");
            bw.write(sb.toString());
            bw.close();
            fw.close();
            System.out.println("Employee added and written to employee.txt successfully!");
        } catch (IOException e) {
            System.out.println("Error writing to file: " + e.getMessage());
        }
    }
    //Check if the employee ID is already in the file
    int checkID(int id) {
        try {
            BufferedReader br = new BufferedReader(new FileReader("employee.txt"));
            String line;
            while ((line = br.readLine()) != null) {
                if (line.contains(" Id : " + id)) {
                    System.out.println("The ID is already in use. Please try again with a different ID.");
                    System.out.print("Enter employee id : ");
                    id = scan_integer.nextInt();
                    checkID(id);
                }
                return id;
            }
            br.close();
        } catch (IOException e) {
            System.out.println("Error reading from file: " + e.getMessage());
        }
        return id;
    }


    void updateEmployeeInfo() {
        System.out.print("Enter the ID of the employee to be updated  : ");
        int id = scan_integer.nextInt();
        try {
            BufferedReader br = new BufferedReader(new FileReader("employee.txt"));
            String line;
            while ((line = br.readLine()) != null) {
                if (line.contains(" Id : " + id)) {
                    System.out.println("employee found");
                    br.close();
                }
                else {
                    System.out.println("there is no employee by this Id ");
                }
            }
        } catch (IOException e) {
            System.out.println("Error reading from file: " + e.getMessage());
        }
        try {
            BufferedReader br = new BufferedReader(new FileReader("employee.txt"));
            StringBuilder updatedFile = new StringBuilder();
            String line;
            boolean found = false;
            while ((line = br.readLine()) != null) {
                if (line.contains(" Id : " + id)) {
                    found = true;
                    while (!(line = br.readLine()).contains("@vvvvvvvvvvvvvvvvvvvvvvvvvv@")) {
                        // Skipping lines of employee with specified ID
                    }
                    continue;
                }
                updatedFile.append(line).append("\n");
            }
            br.close();
            if (!found) {
                System.out.println("Employee not found.");
            } else {
                FileWriter fw = new FileWriter("employee.txt");
                fw.write(updatedFile.toString());
                fw.close();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        try {
            BufferedReader bar = new BufferedReader(new FileReader("employee.txt"));
            System.out.print("Enter the updated first name of the employee : ");
            String fname = scan_string.nextLine();
            System.out.print("Enter the updated last name of the employee : ");
            String lname = scan_string.nextLine();
            System.out.print("Enter the updated sex employee : ");
            String sex = scan_string.nextLine();
            System.out.print("Enter updated employee age: ");
            int age = scan_integer.nextInt();
            System.out.print("Enter updated Academic level of the employee ");
            String academic_level = scan_string.nextLine();
            System.out.print("Enter the updated department of the employee ");
            String Department = scan_string.nextLine();
            System.out.print("Enter the updated employee phone: ");
            long phone = scan_integer.nextLong();
            System.out.print("Enter the updated employee salary: ");
            double salary = scan_integer.nextDouble();
            Employee emp = new Employee(id, fname, lname, sex, age, academic_level, Department, phone, salary);
            employees.add(emp);
            FileWriter fw = new FileWriter("employee.txt", true);
            BufferedWriter bw = new BufferedWriter(fw);
            StringBuilder sb = new StringBuilder();
            sb.append("* Id : ").append(emp.id)
                    .append("\n* first Name: ").append(emp.fname)
                    .append("\n* last Name: ").append(emp.lname)
                    .append("\n* Sex : ").append(emp.sex)
                    .append("\n* Age : ").append(emp.age)
                    .append("\n* academic_level: ").append(emp.academic_level)
                    .append("\n* Department: ").append(emp.Department)
                    .append("\n* Phone : ").append(emp.phone)
                    .append("\n* Salary : ").append(emp.salary)
                    .append("\n@vvvvvvvvvvvvvvvvvvvvvvvvvv@\n");
            bw.write(sb.toString());
            bw.close();
            fw.close();
            bar.close();
            System.out.println("Employee added and written to employee.txt successfully!");
        }
        catch(IOException e)
        {
        System.out.println("Error reading from file: " + e.getMessage());
    }
}
    public void deleteById() {
        System.out.print("Enter employee id to delete: ");
        int id = scan_integer.nextInt();
        try {
            BufferedReader br = new BufferedReader(new FileReader("employee.txt"));
            StringBuilder updatedFile = new StringBuilder();
            String line;
            boolean found = false;
            while ((line = br.readLine()) != null) {
                if (line.contains(" Id : " + id)) {
                    System.out.println("Employee found!");
                    found = true;
                    while (!(line = br.readLine()).contains("@vvvvvvvvvvvvvvvvvvvvvvvvvv@")) {
                        // Skipping lines of employee with specified ID
                    }
                    continue;
                }
                updatedFile.append(line).append("\n");
            }
            br.close();
            if (!found) {
                System.out.println("Employee not found.");
            } else {
                FileWriter fw = new FileWriter("employee.txt");
                fw.write(updatedFile.toString());
                fw.close();
                System.out.println("Employee successfully deleted.");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    void searchByID() {
        System.out.print("Enter the ID of the employee to be searched : ");
        int id = scan_integer.nextInt();
        try {
            BufferedReader br = new BufferedReader(new FileReader("employee.txt"));
            String line;
            while ((line = br.readLine()) != null) {
                if (line.contains(" Id : " + id)) {
                    System.out.println("Employee found!");
                    System.out.println("@^^^^^^^^^^^^^^^^^^^^^^^^^^@");
                    System.out.println(line);
                    while (!(line = br.readLine()).contains("@vvvvvvvvvvvvvvvvvvvvvvvvvv@")) {
                        System.out.println(line);
                    }
                    System.out.println(line);
                    return;
                }
            }
            System.out.println("Employee not found.");
            br.close();
        } catch (IOException e) {
            System.out.println("Error reading from file: " + e.getMessage());
        }
    }
    void readEmployeeFromFile() {
        int flag=0;
        try {
            FileReader fr = new FileReader("employee.txt");
            BufferedReader br = new BufferedReader(fr);
            String line;
            while ((line = br.readLine()) != null) {
                flag++;
                if(flag==1){
                    System.out.println("Here is information of all employees found in the company :-");
                }
                System.out.println(line);
            }
            if(flag==0){
                System.out.println("There is no employee Added to the file.");
            }
            br.close();
            fr.close();
        } catch (IOException e) {
            System.out.println("Error reading from file: " + e.getMessage());
        }
    }
    void count_employee(){
        try {
            BufferedReader br = new BufferedReader(new FileReader("employee.txt"));
            String line;
            int count=0;
            while ((line = br.readLine()) != null) {
                if (line.contains(" Id : ")) {
                    count++;
                }
                }
            System.out.println("Totally there are "+count +" Employees");
      br.close();
    } catch (IOException e) {
        System.out.println("Error reading from file: " + e.getMessage());
    }
    }
    }

public class Main {
    public static void main(String[] args) {
        Scanner string_scanner =new Scanner(System.in);
        boolean flag = true;
        EmployeeManagement employees = new EmployeeManagement();

        while (flag) {
            System.out.println("<<<<<<<<<< WELL COME TO EMPLOYEE INFORMATION SYSTEM >>>>>>>>>>>>>>>");
            System.out.println("  HERE is OPERATIONS the SYSTEM can provide  ");
            System.out.println("          1. Add the information of new Employee ");
            System.out.println("          2. Update information of existing Employee ");
            System.out.println("          3. search an employee ");
            System.out.println("          4. Delete a fired Employee ");
            System.out.println("          5. Display all Employee ");
            System.out.println("          6. Display total number of employee of the company ");
            System.out.println("          7. EXIT ");
            System.out.println("<<<<<<<<<********************************************>>>>>>>>>>>>>>");
            Scanner scan1 = new Scanner(System.in);

            System.out.println("enter the number which u want to perform");
            int choose = scan1.nextInt();
            //  System.out.println(choose);
            switch (choose) {
                case 1:
                    employees.writeEmployeeToFile();
                    break;
                case 2:
                    employees.updateEmployeeInfo() ;
                    break;
                case 3:
                    employees.searchByID() ;
                    break;
                case 4:
                    employees.deleteById() ;
                    break;
                case 5:
                    employees.readEmployeeFromFile();
                    break;
                case 6:
                    employees.count_employee();
                    break;
                case 7:
                    flag = false;
                    break;
                default:
                    System.out.println("!!!!! Enter only the valid number from the options.");
            }  System.out.println("operation successfully completed.");
            int   a;
            System.out.println("Do u want to continue another operations ? \n"+" if u want to continue press 1 otherwise the System will be shutDown .");
            a=scan1.nextInt();

            if(a!=1){
                flag=false;
                System.out.println("the system is closed successfully!!!");
              }
           }
        }
    }
